################
# Selecting GC #
################
java -XX:+UseSerialGC
java -XX:+UseParallelGC
java -XX:+UseConcMarkSweepGC

#############
# Tune heap #
#############
java -XX:NewSize=128m -XX:MaxNewSize=128m -XX:SurvivorRatio=8 -Xms512m -Xmx512m

##############
# GC logging #
##############
java -XX:+PrintGC (-verbose:gc)

###############
# Thread dump #
###############
jsp
jstack -L <java_pid_from_jsp_command> > jstack.out

kill -3
jconsole

#############
# Heap dump #
#############
jsp
jmap -heap <java_pid_from_jsp_command> > jmap.out


# Working with file
tail file                       // display 10 last lines
tail -f file                    // display lines in active mode
less                            // inspect file page by page or line by line
awk                             // cut the file by column

top
ps -ef
rpm
apt-get
yum

ifconfig


ls -lrt | grep "^l"             // list all links from directory
touch fileName                  // create file fileName
chmod 777 fileName              // change umask 777
uname -a                        // OS information, CPU, system architecture 32/64 bit
&                               // run process in background
fg <PID>                        // back to foreground
kill -9 <PID>                   // kill that process
ping                            // check remote host is alive
history                         // command history
scp                             // secure copy
top                             // list processed
df -h                           // check disk space
ps -ef                          // list processed
ps -auxwww                      // list process with very long name
cat /proc/cpuinfo               // System info, CPU
ln -s new_package latest        // create softlink
ln myfile.txt myhardlink.txt    // create hardlink
find                            // Unix command to find file
grep -c "Unix" filename         // count Unix word apperance in filename
export                          // set environmental variable
lsof                            // list process that using a particular file
netstat -a | grep "port"        // check which host are connecting to your host by particular port
nohup                           // run process in background, different from &, process does not stop even when user who
                                // started process logs off

watch                           // repeatedly execute commands provided with specific delay
sed s/Unix/UNIX/g fileName      // replace word Unx to UNIX in fileName
cut -f3 fileName                // display 3 column in fileName
du -sh | grep G                 // check how much space each directory take
uptime                          // check how many days server is up
nslookup                        // check DNS and ip address

curl
curl -v http://localhost:8080/posts
curl -v -H "Accept: application/xml" http://localhost:8080/posts
curl -help

ephemeral port - in unix port used by OS for client sockets
Soft Links - unix softlinks are pointers to programs, files or directories located elsewhere
Hard Links - unix hardlinks are pointers to programs and files, but NOT directories

# Linux Directories
/
/bin
/boot       // Contains files required to boot Linux $ls -F /boot
/dev
/etc
/home
/lib
/media
/mnt
/opt
/root
/run
/sbin
/srv
/tmp
/usr
/var

// systemd
cd /lib/systemd/system
ls -l runlevel5.target
systemctl set-default graphical.target

// Changing runlevels or targets
telinit 5
systemctl isolate graphical.target

// Rebooting
telinit 6
systemctl isolate reboot.target
reboot
shutdown -r now

// Power Off
telinit 0
systemctl isolate poweroff.target
poweroff

// Linux Boot Process-Demo
shutdown -r 5 "rebooting soon..."
reboot

dmesg | less
dmesg -T
cat /var/log/dmesg
cat /etc/inittab
systemctl get-default
systemctl set-default graphical.target
systemctl isolate graphical.target

// System logging
/etc/rsyslog.conf
/var/log/mail
/var/log/mail.info, mail.warn, mail.err
/var/log/auth.log
/var/log/sysog
/var/log/messages

logger -p mail.info -t mailtest "test"
sudo tail -1 /var/log/mail.log

/etc/logrotate.conf
logrotate -fv /etc/logrotate.conf


// Disk Management
// Partitioning
df -h


// Mount Point
/
/home/jason
mkdir /home/sarah
mount /dev/sdb2 /home // you cannot see /home/sarah now
unmount /home         // you can now see /home/sarah

// fdisk
fdisk -l
fdisk /dev/sdb
fdisk /dev/sdc
fdisk -l | less


// file systems
// ext - extended file system, ext2, ext3, ext4
// other file systems: ReiserFS, JFS, XFS, Btrfs
mkfs -t ext3 /dev/sdb2
mkfs -t ext4 /dev/sdb3
mkfs.ext4 /dev/sdb3
ls -l /sbin/mkfs*


// Mounting device
mount /dev/sdb3 /opt
df -h
/etc/fstab // make mounts persist between reboots
unmount /opt
unmount /dev/sdb3


// Preparing swap space
mkswap /dev/sdb1
swapon /dev/sdb1
swapon -s
lsblk -f
blkid


// User Management
// /etc/passwd - format for password, username:password:uid:gid:comments:home_dir:shell
ps -fu joe

// Passwords are stored in /etc/shadow
// Encrypted password used to be stored in /etc/passwd
// uid is configured in /etx/login.dfs
newgrp // switch group
/etc/shells // list of available shells

useradd -c "Grant Majki" -m -s /bin/bash grant    // add user
passwd grant                                // create password
tail -1 /etc/passwd
tail -1 /etc/shadow
useradd -c "Apache Web Server User" -d /opt/apache -r -s /usr/sbin/nologin apache
tail -1 /etc/passwd

userdel -r grant

usermod -c "MySQL User" mysql


// User Groups
// /etc/group
groups root
groupadd web
tail -1 /etc/group
groupadd -g 2500 db
tail -1 /etc/group

groupdel db

groupmod -g 1234 web
grep web /etc/group
groupmod -n http web
grep http /etc/group


// Dev Ops stuff
which wget
sudo su
yum install wget
wget --no-cookies ".../jdk-8u/11-linux-x64.tar.gz"
tar xzf jdk-8u/11-linux-x64.tar.gz
sudo rpm --import http://jenkins-ci.org/redhat/jenkins-ci.org.key
sudo yum install jenkins
service jenkins start
ps -ef | grep jenkins
yum install httpd
service httpd start
// /etc/https/conf/httpd.conf
service jenkins restart
ssh-keygen -t rsa -c 'email@email.com' // .ssh/ in this location would be public and private keys
git --version
uname -r
sudo yum update
sudo yum install docker-engine
sudo systemctl enable docker.service
sudo systemctl start docker
ps -ef | grep docker
wget http://..../0.0.1/spring-core-0.0.1.jar
which java
java -jar ./spring-core-0.0.1.jar
cd /etc/systemd/service
vi spring.service

systemctl daemon-reload
systemctl spring.service
systemctl start spring
tail -f /var/log/messages

// artifactory, nexus

// REST
curl http://localhost:8080/stream/all
// get by {id}
curl http://localhost:8080/stream/1
// get stream of events
curl http://localhost:8080/stream/events

curl client:secret@localhost:8082/auth/oauth/token -d grant_type=client_credentials -d scope=read -d client_id=client -d client_secret=secret -d username=client -d password=secret
curl http://localhost:8082/auth/user

curl -H "Authorization: Bearer 9b6f8738-896a-4b6b-a67f-3ca66a0c489a" http://localhost:8082/auth/user

// Login Rest Endpoint
// GET
localhost:8080/auth/private?token=
localhost:8080/auth/private?token=64abd4cd-e252-4d6a-a53b-c44d8842f27b

curl -X GET localhost:8080/auth/private?token=64abd4cd-e252-4d6a-a53b-c44d8842f27b

// POST
// Postman
// Login
localhost:8080/auth/login
{"username":"Mario","password":"pass2"}

// Windows curl
curl -H "content-type: application/json" -X POST -d "{"""username""": """Mario""","""password""": """secret"""}" http://localhost:8080/auth/login

// Logout
localhost:8080/auth/logout?token=64abd4cd-e252-4d6a-a53b-c44d8842f27b

curl -X POST localhost:8080/auth/logout?token=64abd4cd-e252-4d6a-a53b-c44d8842f27b // delete
curl -X GET http://localhost:8080/auth/private?token=64abd4cd-e252-4d6a-a53b-c44d8842f27b // unauthorized




#########
# Maven #
#########

Build Tools automates developer tasks (ant, maven, gradle)
- Compiling source code into binary
- Packagig that binary code
- Run test
- Deploy to other system (PROD)

Maven
- Dependency management
- Plugin based architecture
- XML configuration

Parent pom to configuration project

Mave repositories
- local
- central
- remote

<dependencies>
<build>
<plugins>
mvn spring-boot:run

mvn clean install
mvn clean deploy
mvn clean test
mvn clean package


